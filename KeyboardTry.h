#ifndef _KeyboardTry_
#define _KeyboardTry_

enum EHARDWAREKEYBOARDEVENT
{
	EHARDWAREKEYBOARDEVENT_A_KEYPRESSED = 0,
	EHARDWAREKEYBOARDEVENT_B_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_C_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_D_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_E_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_F_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_G_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_H_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_I_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_J_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_K_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_L_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_M_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_N_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_O_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_P_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_Q_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_R_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_S_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_T_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_U_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_V_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_W_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_X_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_Y_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_Z_KEYPRESSED,

	EHARDWAREKEYBOARDEVENT_A_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_B_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_C_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_D_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_E_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_F_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_G_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_H_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_I_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_J_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_K_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_L_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_M_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_O_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_P_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_Q_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_R_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_S_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_T_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_U_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_V_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_W_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_X_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_Y_KEYRELEASED,
	EHARDWAREKEYBOARDEVENT_Z_KEYRELEASED,

	EHARDWAREKEYBOARDEVENT_LEFT_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_RIGHT_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_UP_KEYPRESSED,
	EHARDWAREKEYBOARDEVENT_DOWN_KEYPRESSED,
};


//keydefines start
#define VK_B 0x42
#define VK_H 0x48
#define VK_T 0x54
#define VK_LEFTARROW 0x25
#define VK_RIGHTARROW 0x27
#define VK_UPARROW 0x26
#define VK_DOWNARROW 0x28
//keydefines end


struct KeyboardTry
{

	KeyboardTry(){}
	~KeyboardTry(){}


	void KeyboardEvent(EHARDWAREKEYBOARDEVENT EHardwareKeyboardEvent);

};

#endif